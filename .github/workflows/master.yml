on: [push, pull_request]


env:
    APT: sudo apt install -y --no-install-recommends

jobs:
    cpp_octave:
        runs-on: ubuntu-20.04
        defaults:
            run:
                shell: bash
        steps:
            - uses: actions/checkout@v2
            - run: sudo apt update
            - run: $APT cppcheck
            - run: $APT python3-pip python3-setuptools
            - run: sudo pip3 install scspell3k
            - run: $APT libboost-all-dev libeigen3-dev octave liboctave-dev
            - run: $APT clang-tidy-10
            - run: make test

    latest_eigen:
        runs-on: ubuntu-22.04
        defaults:
            run:
                shell: bash
        steps:
            - uses: actions/checkout@v2
            - run: sudo apt update
            - run: $APT cppcheck
            - run: $APT python3-pip python3-setuptools
            - run: sudo pip3 install scspell3k
            - run: $APT libboost-all-dev octave liboctave-dev
            - run: $APT clang-tidy-13
            - run: make install_latest_eigen
            # suppressions needed for sanitizers
            - run: make unit_tests OPTIONS=test

    dependency:
        runs-on: ubuntu-20.04
        defaults:
            run:
                shell: bash
        steps:
            - uses: actions/checkout@v2
            - run: $APT libeigen3-dev
            - run: make build
            - run: sudo make install
            - run: make test_dependency

    focal_noetic_catkin_old:
        container: ros:noetic-ros-base-focal
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
        steps:
            - uses: actions/checkout@v2
            - run: |
                source /opt/ros/noetic/setup.bash
                make catkin_test_old ROS_DISTRO=noetic UBUNTU_DISTRO=focal

    focal_noetic_catkin_new:
        container: ros:noetic-ros-base-focal
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
        steps:
            - uses: actions/checkout@v2
            - run: |
                source /opt/ros/noetic/setup.bash
                make catkin_test_new ROS_DISTRO=noetic UBUNTU_DISTRO=focal

    prerelease:
        runs-on: ubuntu-20.04
        defaults:
            run:
                shell: bash
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - run: make ros_prerelease ROS_DISTRO=noetic UBUNTU_DISTRO=focal BRANCH=`git branch --show-current`
              env:
                  CCACHE_DIR: ${GITHUB_WORKSPACE}/.ccache


    bionic_scanbuild:
        runs-on: ubuntu-20.04

        # Install system dependencies, namely a very barebones ROS setup.
        steps:
            - uses: actions/checkout@v2
            - run: sudo apt update
            - run: $APT libboost-all-dev libeigen3-dev octave liboctave-dev
            - run: $APT clang-tidy-10
            - run: make clangcheck SCANBUILD=scan-build-10

    deb:
        runs-on: ubuntu-20.04
        defaults:
            run:
                shell: bash
        steps:
            - uses: actions/checkout@v2
            - run: $APT libeigen3-dev
            - run: sudo gem install fpm
            - run: make deb
            - run: sudo dpkg -i qpmad-*-any.deb
            - run: make test_dependency
            - uses: actions/upload-artifact@v2
              with:
                  name: deb
                  path: qpmad-*-any.deb

    msvc:
        runs-on: windows-latest

        steps:
            - uses: actions/checkout@v2
            - uses: ilammy/msvc-dev-cmd@v1
              with:
                  arch: x64
            - run: |
                  Move-Item -Path vcpkg.json.test -Destination vcpkg.json
                  vcpkg install
            - run: |
                  cmake -D CMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -D QPMAD_BUILD_TESTS=ON -G "NMake Makefiles" .
                  nmake
                  nmake test
